---
const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>{title}</title>
        <meta name="description" content={description} />

        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Oswald:wght@300&family=Source+Sans+3:wght@400;600&display=swap"
            rel="stylesheet"
        />
        <link
            href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;1,400&display=swap"
            rel="stylesheet"
        />
        <link
            href="https://fonts.googleapis.com/css2?family=Unbounded:wght@200..900&display=swap"
            rel="stylesheet"
        />
        <script type="application/ld+json">
            {
                "@context": "https://schema.org",
                "@type": "Organization",
                "name": "Predicate Higher Ed",
                "url": "https://www.predicatehighered.com/",
                "logo": "https://www.predicatehighered.com/_astro/logo_white.0tC1RDH9_K0wOo.svg",
                "contactPoint": {
                    "@type": "ContactPoint",
                    "email": "info@predicatehighered.com",
                    "contactType": "customer service"
                }
            }
        </script>
    </head>
    <body>
        <slot />

        <script>
            const header = document.querySelector(".main-header");
            if (header) {
                window.addEventListener("scroll", () => {
                    header.classList.toggle("scrolled", window.scrollY > 50);
                });
            }

            const faders = document.querySelectorAll(".fade-in");
            const appearOptions = {
                threshold: 0.1,
                rootMargin: "0px 0px -50px 0px",
            };
            const appearOnScroll = new IntersectionObserver(
                (entries, observer) => {
                    entries.forEach((entry) => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add("is-visible");
                            observer.unobserve(entry.target);
                        }
                    });
                },
                appearOptions,
            );

            faders.forEach((fader) => {
                appearOnScroll.observe(fader);
            });

            const accordions = document.querySelectorAll(
                ".services-accordion .service-accordion-item",
            );
            accordions.forEach((accordion) => {
                accordion.addEventListener("toggle", (event) => {
                    if (accordion.open) {
                        accordions.forEach((otherAccordion) => {
                            if (otherAccordion !== accordion) {
                                otherAccordion.open = false;
                            }
                        });
                    }
                });
            });
        </script>
    </body>
</html>
